@model WebMVC_OrderForm.Models.OrderForm

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAgent.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>OrderForm</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @functions{
        public string getOrderID()
        {
            Random rnd = new Random();
            int num = rnd.Next();
            string orderID = "ORDER" + num;
            return orderID;
        }
    }
    @Html.LabelFor(model => model.orderID, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.orderID, new { @Value = @getOrderID(), @disable="disable", @readonly="readonly" })
        @Html.ValidationMessageFor(model => model.orderID, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.addrress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.addrress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.addrress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.deliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.deliveryDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.deliveryDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
